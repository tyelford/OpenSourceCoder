#Source: Problem 2 from Project Euler - https://projecteuler.net/problem=2
#Author: Tyson Elford
#Date: June 26, 2014

#Problem:
#Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
#1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

#My Solution:

#Starting Terms
total = 0
firstTerm = 1
secondTerm = 2

#function to calculate the next term in the sequence
#as well as add to the grand total sum
def fib(one, two):
	nextTerm = one + two
	#only add to the total on even numbers
	if(nextTerm % 2 == 0):
		#make sure to use the global total
		global total
		total += nextTerm
	return nextTerm

#Starting Total is 2 taking in count the first terms
total = 2
#Run the program
while(secondTerm < 4000000):
	nextTerm = fib(firstTerm, secondTerm)
	firstTerm = secondTerm
	secondTerm = nextTerm
print total

